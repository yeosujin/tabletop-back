name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
        
    - name: Build with Maven
      run: mvn clean package -DskipTests --batch-mode --quiet
        
    - name: Create directory on EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USERNAME }}
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        ssh -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} 'mkdir -p ~/app'

    - name: Copy JAR to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USERNAME }}
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        scp -o StrictHostKeyChecking=no -i private_key target/*.jar ${USER}@${HOST}:~/app/app.jar
        
    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USERNAME }}
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        ssh -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} '
          pid=$(pgrep -f app.jar) && [ -n "$pid" ] && kill $pid
          nohup java -jar ~/app/app.jar \
            --spring.datasource.url=${{ secrets.MYSQL_URL }} \
            --spring.datasource.username=${{ secrets.MYSQL_USERNAME }} \
            --spring.datasource.password=${{ secrets.MYSQL_PASSWORD }} \
            > ~/app/app.log 2>&1 &
        '
